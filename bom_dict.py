#!/usr/bin/env python
# coding: utf-8

# In[3]:


import json
import os


# In[4]:


Heater = {'model': 'не задана',
          'sensors': {'Канальный датчик температуры': {'qty': 1,
                                                       'model': 'HTF200 PT1000'}}}


# In[5]:


Heater_water = {'model': {'basic': 'КВ',
                          'pure': 'КВн-э',
                          'pool': 'КВн-э'},
                'sensors': {'Канальный датчик температуры': {'qty': 1,
                                                             'model': 'HTF200 PT1000'},
                            'Капилярный термостат': {'qty': 1,
                                                     'model': 'FST-1D'}},
                'accesory': {'basic': '*Термостат защиты от размораживания.*',
                             'pure': '*Эпоксидное покрытие оребрения.  \n\
                         Корпус теплообменника из нержавеющей стали.  \n\
                         Термостат защиты от размораживания.*',
                             'pool': '*Термостат защиты от размораживания.*'}}


# In[6]:


Heater_electric = {'model': {'basic': 'Стальные ТЭНы',
                             'pure': 'ТЭНы из нержавеющей стали',
                             'pool': 'ТЭНы из нержавеющей стали'},
                   'sensors': {'Канальный датчик температуры': {'qty': 1,
                                                                'model': 'HTF200 PT1000'}},
                   'accesory': {'basic': '*Две ступени защиты от перегрева.*',
                                'pure': '*Две ступени защиты от перегрева.*  \n\
                                 *Корпус и ТЭНы из нержавеющей стали.*  \n',
                                'pool': '*Две ступени защиты от перегрева.*'}}


# In[7]:


Heater_water_regenerator = {'model': {'basic': 'ГР ГН',
                                      'pure': 'ГР ГНн-э',
                                      'pool': 'ГР ГНн-э'},
                            'sensors': {'Канальный датчик температуры': {'qty': 1,
                                                                         'model': 'HTF200 PT1000'}},
                            'accesory': {'pure': '*Эпоксидное покрытие оребрения.  \n\
                                          Корпус теплообменника из нержавеющей стали.*   \n'}}


# In[8]:


Cooler_water = {'model': {'basic': 'ГО',
                          'pure': 'ГОн-э',
                          'pool': 'ГОн-э'},
                'sensors': {'Канальный датчик температуры': {'qty': 1,
                                                             'model': 'HTF200 PT1000'}},
                'accesory': {'basic': '*Поддон из нержавеющей стали.*  \n\
                                    *Каплеуловитель*  \n',
                             'pure': '*Эпоксидное покрытие оребрения.*  \n\
                                 *Корпус из нержавеющей стали.*  \n\
                                 *Поддон из нержавеющей стали.*  \n\
                                 *Каплеуловитель.*  \n',
                             'pool': '*Поддон из нержавеющей стали.*  \n\
                                    *Каплеуловитель*  \n'}}


# In[9]:


Cooler_freon = {'model': {'basic': 'ИФ',
                          'pure': 'ИФн-э',
                          'pool': 'ИФн-э'},
                'sensors': {'Канальный датчик температуры': {'qty': 1,
                                                             'model': 'HTF200 PT1000'}},
                'accesory': {'basic': '*Поддон из нержавеющей стали.*  \n\
                                    *Каплеуловитель*  \n',
                             'pure': '*Эпоксидное покрытие оребрения.*  \n\
                                 *Корпус из нержавеющей стали.*  \n\
                                 *Поддон из нержавеющей стали.*  \n\
                                 *Каплеуловитель.*  \n',
                             'pool': '*Поддон из нержавеющей стали.*  \n\
                                    *Каплеуловитель*  \n'}}


# In[10]:


Cooler_water_regenerator = {'model': {'basic': 'ГР ГО',
                                      'pure': 'ГР ГОн-э',
                                      'pool': 'ГР ГОн-э'},
                            'sensors': {'Канальный датчик температуры': {'qty': 1,
                                                                         'model': 'HTF200 PT1000'},
                                        'Капилярный термостат': {'qty': 1,
                                                                 'model': 'FST-1D'}},
                            'accesory': {'basic': '*Поддон из нержавеющей стали.*  \n\
                                    *Каплеуловитель*  \n',
                             'pure': '*Эпоксидное покрытие оребрения.*  \n\
                                 *Корпус из нержавеющей стали.*  \n\
                                 *Поддон из нержавеющей стали.*  \n\
                                 *Каплеуловитель.*  \n',
                             'pool': '*Поддон из нержавеющей стали.*  \n\
                                    *Каплеуловитель*  \n'}}


# In[11]:


Filter = {'model': 'не задана',
          'sensors': {'basic': {'Реле дифференциального давления': {'qty': 1,
                                                                   'model': 'DS-205B'}},
                      'pure': {'Стрелочный манометр и реле дифференциального давления': {'qty': 1,
                                                                                         'model': 'DPG600/PS600'}},
                      'pool':  {'Реле дифференциального давления': {'qty': 1,
                                                                   'model': 'DS-205B'}}},
          'accesory': {'basic': '*Датчик перепада давления.*  \n',
                       'pure':  '*Датчик перепада давления со стрелочной индикацией.*  \n',
                       'pool': '*Датчик перепада давления.*  \n'}}


# In[12]:


Humidifier = {'model': 'не задана',
              'sensors': {'basic': {'Канальный активный датчик температуры и влажности': {'qty': 2,
                                                                                          'model': 'KFTF-SD-U'}},
                          'pure': {'Канальный активный датчик температуры и влажности': {'qty': 2,
                                                                                          'model': 'KFTF-SD-U'},
                                             'Сифон с гидрозатвором': {'qty': 1,
                                                                       'model': 'Сифон с гидрозатвором'}},
                          'pool':  {'Канальный активный датчик температуры и влажности': {'qty': 2,
                                                                                          'model': 'KFTF-SD-U'}}},
              'accesory': {'basic':'*Поддон из нержавеющей стали.*  \n\
                                  *Каплеуловитель*  \n',
                           'pure':'*Освещение секции.*  \n\
                                 *Смотровое окно.*  \n\
                                 *Поддон из нержавеющей стали.*  \n\
                                 *Каплеуловитель*  \n',
                           'pool':'*Поддон из нержавеющей стали.*  \n\
                                  *Каплеуловитель*'}}


# In[13]:


Humidifier_steam = {'model': 'не задана',
              'sensors': {'basic': {'Канальный активный датчик температуры и влажности': {'qty': 2,
                                                                                          'model': 'KFTF-SD-U'}},
                      'pure': {'Канальный активный датчик температуры и влажности': {'qty': 2,
                                                                                          'model': 'KFTF-SD-U'},
                                             'Сифон с гидрозатвором': {'qty': 1,
                                                                       'model': 'Сифон с гидрозатвором'}},
                      'pool':  {'Канальный активный датчик температуры и влажности': {'qty': 2,
                                                                                          'model': 'KFTF-SD-U'}}},
              'accesory': {'basic':'*Поддон из нержавеющей стали.*  \n\
                                  *Каплеуловитель*  \n',
                           'pure':'*Освещение секции.*  \n\
                                 *Смотровое окно.*  \n\
                                 *Поддон из нержавеющей стали.*  \n\
                                 *Каплеуловитель*  \n',
                           'pool':'*Поддон из нержавеющей стали.*  \n\
                                  *Каплеуловитель*'}}


# In[14]:


Humidifier_adiabatic = {'model': 'не задана',
                        'sensors': {'basic': {'Канальный активный датчик температуры и влажности': {'qty': 2,
                                                                                          'model': 'KFTF-SD-U'}},
                                    'pure': {'Канальный активный датчик температуры и влажности': {'qty': 2,
                                                                                                   'model': 'KFTF-SD-U'},
                                             'Сифон с гидрозатвором': {'qty': 1,
                                                                       'model': 'Сифон с гидрозатвором'}},
                                    'pool':  {'Канальный активный датчик температуры и влажности': {'qty': 2,
                                                                                          'model': 'KFTF-SD-U'}}},
                        'accesory': {'basic':'*Поддон из нержавеющей стали.*  \n\
                                  *Каплеуловитель*  \n',
                           'pure':'*Освещение секции.*  \n\
                                 *Смотровое окно.*  \n\
                                 *Поддон из нержавеющей стали.*  \n\
                                 *Каплеуловитель*  \n',
                           'pool':'*Поддон из нержавеющей стали.*  \n\
                                  *Каплеуловитель*'}}


# In[15]:


Flex_joint = {'model': 'не задана'}


# In[16]:


Damper = {'model': 'не задана',
          'sensors': {'Электропривод': {'qty': 1,
                                        'model': 'Siemens'}},
          'accesory': '*Электропривод.*  \n'}


# In[17]:


Mixing = {'model': 'не задана',
          'sensors': {'Электропривод': {'qty': 1,
                                        'model': 'Siemens'}},
          'accesory': '*Электропривод.*  \n'}


# In[18]:


Silencer = {'model': 'не задана',
            'accesory': {'pure': '*Корпус пластин из нержавеющей стали.*  \n'}}


# In[19]:


Fan = {'model': 'не задана',
       'sensors': {'pure': {'Расходомер': {'qty': 1, 'model': 'DPT-Flow-2000-D'}},
                  'basic': {},
                   'pool': {}},
       'accesory': {'basic': '*Дверь с защелками.*',
                    'pure': '*Защитный выключатель.  \n\
                         Дверь с защелками.  \n\
                         Освещение.  \n\
                         Смотровое стекло  \n*',
                    'pool':'*Дверь с защелками.*'}}


# In[20]:


Fan_reserved = {'model': 'не задана',
                'sensors': {'basic': {'Электропривод': {'qty': 1, 'model': 'siemens'}},
                            'pure': {'Расходомер': {'qty': 1, 'model': 'DPT-Flow-2000-D'},
                                     'Электропривод': {'qty': 1, 'model': 'siemens'}},
                            'pool': {'Электропривод': {'qty': 1, 'model': 'siemens'}}},
                'accesory': {'basic': '*Дверь с защелками.   \n\
                                    Воздушные заслонки с электроприводом\n\
                                    Вентиляторы со 100 % резервированием*',
                             'pure': '*Защитный выключатель.  \n\
                                 Дверь с защелками.  \n\
                                 Освещение.  \n\
                                 Смотровое стекло  \n\
                                 Воздушные заслонки с электроприводом   \n\
                                 Вентиляторы со 100 % резервированием*',
                             'pool':'*Дверь с защелками.   \n\
                                    Воздушные заслонки с электроприводом\n\
                                    Вентиляторы со 100 % резервированием*'}}


# In[ ]:





# In[ ]:





# In[21]:


bom_dict = {'Heater': Heater,
            'Heater_water': Heater_water,
            'Heater_electric': Heater_electric,
            'Heater_water_regenerator': Heater_water_regenerator,
            'Cooler_water': Cooler_water,
            'Cooler_freon': Cooler_freon,
            'Cooler_water_regenerator': Cooler_water_regenerator,
            'Filter': Filter,
            'Humidifier': Humidifier,
            'Humidifier_steam': Humidifier_steam,
            'Humidifier_adiabatic': Humidifier_adiabatic,
            'Flex_joint': Flex_joint,
            'Damper': Damper,
            'Silencer': Silencer,
            'Fan': Fan,
            'Fan_reserved': Fan_reserved
            }


# In[22]:


bom_dict


# In[23]:


fn = os.path.join('.' ,'ext_data', 'bom_dict.json')
os.makedirs(os.path.dirname(fn), exist_ok=True)
with open(fn, 'w') as fp:
    json.dump(bom_dict, fp)


# In[ ]:




